{"version":3,"file":"main.js","mappings":"yBAAe,MAAMA,EACnB,WAAAC,CAAYC,GACVC,KAAKD,QAAUA,EACfC,KAAKC,QAAU,CACbC,UAAW,IAEbF,KAAKG,eAAiB,EACtBH,KAAKI,mBAAqB,EAC1BJ,KAAKK,KAAOC,SAASC,gBAErBP,KAAKQ,OACLR,KAAKS,eACP,CAEA,IAAAD,GACER,KAAKU,aAELC,OAAOC,iBAAiB,SAAUZ,KAAKa,SAASC,KAAKd,MACvD,CAEA,UAAAU,GACE,MAAMR,EAAYF,KAAKD,QAAQgB,aAAa,kBACxCb,IACFF,KAAKC,QAAQC,UAAYc,WAAWd,GAExC,CAEA,QAAAW,GACEb,KAAKI,mBAAqBJ,KAAKG,eAC/BH,KAAKG,eAAiBG,SAASW,iBAAiBC,UAChDlB,KAAKmB,iBACLnB,KAAKoB,eACP,CAEA,cAAAD,GAEInB,KAAKG,eACHG,SAASW,iBAAiBI,aAAerB,KAAKC,QAAQC,YACvDF,KAAKD,QAAQuB,aAAa,oBAE3BtB,KAAKK,KAAKkB,UAAUC,IAAI,oBAExBxB,KAAKK,KAAKkB,UAAUE,OAAO,mBAE/B,CAEA,aAAAL,GACMpB,KAAKG,gBAAkBH,KAAKI,oBAC9BJ,KAAKK,KAAKkB,UAAUC,IAAI,qBACxBxB,KAAKK,KAAKkB,UAAUE,OAAO,qBAE3BzB,KAAKK,KAAKkB,UAAUC,IAAI,mBACxBxB,KAAKK,KAAKkB,UAAUE,OAAO,qBAE/B,CAEA,aAAAhB,GACiBT,KAAKD,QAAQ2B,cAAc,cACnCd,iBAAiB,QAASZ,KAAK2B,YAAYb,KAAKd,MACzD,CAEA,WAAA2B,GACErB,SAASC,gBAAgBgB,UAAUK,OAAO,gBAC5C,EC9Da,MAAMC,EACnB,WAAA/B,GACEE,KAAK8B,mBAAqB,GAC1B9B,KAAK+B,cAAgB,CACnBlC,OAAM,GAERG,KAAKQ,MACP,CACA,IAAAA,GACE,MAAMwB,EAAa1B,SAAS2B,iBAAiB,oBAE7C,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAK,CAC1C,MAAMnC,EAAUiC,EAAWE,GACrBE,EAAgBrC,EAAQsC,QAAQC,UAEtC,GAAItC,KAAK+B,cAAcK,GAAgB,CACrC,MAAMG,EAAW,IAAIvC,KAAK+B,cAAcK,GAAerC,GACvDC,KAAK8B,mBAAmBU,KAAKD,EAC/B,MACEE,QAAQC,IAAI,iBAAiBN,iBAEjC,CACF,ECvBa,MAAMO,EACnB,WAAOC,CAAKC,GACVlC,OAAOmC,UAAYnC,OAAOmC,WAAa,GACvCD,EAAOA,GAAQC,UAAY,mBAC3BC,MAAMF,GACHG,KAAMC,IACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEX,MAAM,IAAIC,MAAM,uCAGnBJ,KAAMK,IACL,MAAMC,EAAMhD,SAASiD,cAAc,OACnCD,EAAIE,MAAMC,QAAU,OACpBH,EAAII,UAAYL,EAChB/C,SAASqD,KAAKC,YAAYN,KAE3BO,MAAOC,IACNrB,QAAQC,IAAI,6BAA6BoB,EAAMC,YAErD,ECLF,IAbA,MACE,WAAAjE,GACEE,KAAKQ,MACP,CAEA,IAAAA,GACEF,SAASC,gBAAgBgB,UAAUC,IAAI,UAEvCmB,EAAMC,OACN,IAAIf,CACN,E","sources":["webpack://timtools/./src/scripts/components/Header.js","webpack://timtools/./src/scripts/ComponentFactory.js","webpack://timtools/./src/scripts/utils/Icons.js","webpack://timtools/./src/scripts/Main.js"],"sourcesContent":["export default class Header {\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.options = {\r\n      threshold: 0.1,\r\n    };\r\n    this.scrollPosition = 0;\r\n    this.lastScrollPosition = 0;\r\n    this.html = document.documentElement;\r\n\r\n    this.init();\r\n    this.initNavMobile();\r\n  }\r\n\r\n  init() {\r\n    this.setOptions();\r\n\r\n    window.addEventListener('scroll', this.onScroll.bind(this));\r\n  }\r\n\r\n  setOptions() {\r\n    const threshold = this.element.getAttribute('data-threshold');\r\n    if (threshold) {\r\n      this.options.threshold = parseFloat(threshold);\r\n    }\r\n  }\r\n\r\n  onScroll() {\r\n    this.lastScrollPosition = this.scrollPosition;\r\n    this.scrollPosition = document.scrollingElement.scrollTop;\r\n    this.setHeaderState();\r\n    this.setDirections();\r\n  }\r\n\r\n  setHeaderState() {\r\n    if (\r\n      this.scrollPosition >\r\n        document.scrollingElement.scrollHeight * this.options.threshold &&\r\n      !this.element.hasAttribute('data-always-show')\r\n    ) {\r\n      this.html.classList.add('header-is-hidden');\r\n    } else {\r\n      this.html.classList.remove('header-is-hidden');\r\n    }\r\n  }\r\n\r\n  setDirections() {\r\n    if (this.scrollPosition >= this.lastScrollPosition) {\r\n      this.html.classList.add('is-scrolling-down');\r\n      this.html.classList.remove('is-scrolling-up');\r\n    } else {\r\n      this.html.classList.add('is-scrolling-up');\r\n      this.html.classList.remove('is-scrolling-down');\r\n    }\r\n  }\r\n\r\n  initNavMobile() {\r\n    const toggle = this.element.querySelector('.js-toggle');\r\n    toggle.addEventListener('click', this.onToggleNav.bind(this));\r\n  }\r\n\r\n  onToggleNav() {\r\n    document.documentElement.classList.toggle('nav-is-active');\r\n  }\r\n}\r\n","import Header from './components/Header.js';\r\nexport default class ComponentFactory {\r\n  constructor() {\r\n    this.componentInstances = [];\r\n    this.componentList = {\r\n      Header,\r\n    };\r\n    this.init();\r\n  }\r\n  init() {\r\n    const components = document.querySelectorAll('[data-component]');\r\n\r\n    for (let i = 0; i < components.length; i++) {\r\n      const element = components[i];\r\n      const componentName = element.dataset.component;\r\n\r\n      if (this.componentList[componentName]) {\r\n        const instance = new this.componentList[componentName](element);\r\n        this.componentInstances.push(instance);\r\n      } else {\r\n        console.log(`La composante ${componentName} n'existe pas`);\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default class Icons {\r\n  static load(path) {\r\n    window.iconsPath = window.iconsPath || '';\r\n    path = path || iconsPath + 'assets/icons.svg';\r\n    fetch(path)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.text();\r\n        } else {\r\n          throw new Error('Le fichier icons est introuvable.');\r\n        }\r\n      })\r\n      .then((data) => {\r\n        const svg = document.createElement('div');\r\n        svg.style.display = 'none';\r\n        svg.innerHTML = data;\r\n        document.body.appendChild(svg);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Une erreur est survenur : ${error.message}`);\r\n      });\r\n  }\r\n}\r\n","import ComponentFactory from './ComponentFactory.js';\r\nimport Icons from './utils/Icons.js';\r\n\r\nclass Main {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    document.documentElement.classList.add('has-js');\r\n\r\n    Icons.load();\r\n    new ComponentFactory();\r\n  }\r\n}\r\n\r\nnew Main();\r\n"],"names":["Header","constructor","element","this","options","threshold","scrollPosition","lastScrollPosition","html","document","documentElement","init","initNavMobile","setOptions","window","addEventListener","onScroll","bind","getAttribute","parseFloat","scrollingElement","scrollTop","setHeaderState","setDirections","scrollHeight","hasAttribute","classList","add","remove","querySelector","onToggleNav","toggle","ComponentFactory","componentInstances","componentList","components","querySelectorAll","i","length","componentName","dataset","component","instance","push","console","log","Icons","load","path","iconsPath","fetch","then","res","ok","text","Error","data","svg","createElement","style","display","innerHTML","body","appendChild","catch","error","message"],"sourceRoot":""}